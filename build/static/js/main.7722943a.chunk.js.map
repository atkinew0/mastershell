{"version":3,"sources":["checkSame.js","timedue.js","addons/attach.js","parseCom.js","Popup.js","Command.js","WordBox.js","ControlBox.js","Prompt.js","ReactXterm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","checkSame","question","answer","flagsQ","this","getFlags","flagsA","stripFlags","flagsMatch","length","every","flag","includes","command","split","filter","elem","charAt","join","console","log","flags","token","forEach","indexOf","push","substring","update","correct","calcDue","repetitions","daysTillDue","calcFail","days","scheduled","futureDays","now","Date","getTime","timeDue","attach","term","socket","bidirectional","buffered","callback","myTextDecoder","_getCommand","_flushBuffer","write","_attachSocketBuffer","_pushToBuffer","data","setTimeout","_getMessage","ev","str","ArrayBuffer","Error","TextDecoder","decode","_sendData","readyState","encoded","encodeURI","send","addEventListener","on","detach","bind","off","removeEventListener","Object","defineProperty","value","apply","terminalConstructor","prototype","__dirname","require","path","commandsJson","buffer","cList","score","commands","init","addChar","char","printBuffer","repeat","checkCommand","replace","clear","check","textInput","tokens","i","checkBuffer","_this","tempBuffer","slice","ret","HOST","concat","style","border","background","width","height","position","left","top","zIndex","selectStyle","margin","padding","fontSize","inputStyle","Popup","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","field","e","setState","target","handleKey","event","key","onSubmit","due","theBody","prompt","state","display","answer2","answered","theReq","fetch","body","JSON","stringify","headers","Content-Type","method","then","res","ok","status","text","resText","close","selectOption","typed","level","map","index","react_default","a","createElement","onKeyPress","type","size","renderOptions","onClick","React","Component","borderRadius","Command","onClose","renderPop","handleClick","element","Popup_Popup","float","titleStyle","WordBox","setmode","focus","theRequest","response","resJSON","parse","questionsCall","mode","stopReview","_this2","words","Command_Command","paddingInlineStart","renderWords","bottom","completed","done","total","renderButton","ControlBox","levelClicked","nextLevel","levels","finished","number","resjson","locked","renderStyle","selected","name","spanStyle","verticalAlign","lineHeight","color","fontFamily","overflowWrap","overflow","innerStyle","paddingTop","Prompt","textAlign","whiteSpace","parser","Terminal","applyAddon","fit","fullscreen","search","winptyCompat","SOCKET_URL","containerStyle","marginRight","marginTop","transform","MAX","Math","min","ReactTerminal","handleQuestions","questionsArray","levelSelected","nextQuestion","questions","updatePrompt","handleSRS","setMode","focusTerm","oldPrompt","stop","elementId","failures","interval","lastEntry","promptColor","cursorBlink","rows","open","document","getElementById","winptyCompatInit","charCodeAt","currentText","textarea","hint","checkAnswer","_makeCommand","decreaseFontSize","setOption","increaseFontSize","_connectToServer","clearTimeout","_this3","currentLevel","correct1","correct2","CheckSame","updateDue","flashPrompt","dueObj","TimeDue","id","Prompt_Prompt","WordBox_WordBox","ControlBox_ControlBox","_this4","cols","writeln","statusText","_tryAgain","processId","pid","WebSocket","onopen","comp","onclose","onerror","error","_this5","some","commandObj","updateCommands","toConsumableArray","commandObject","App","className","ReactXterm_ReactTerminal","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7722943a.chunk.js","sourcesContent":["\nmodule.exports = {\n\ncheckSame(question, answer){\n    //check if two linux commands are equivalent ie\n    //correct for 1) different spacing 2) flags in different positions 3)flags in different order\n\n    //get flags returned as an array ie ls -al becomes ['a','l']\n    let flagsQ = this.getFlags(question);\n    let flagsA = this.getFlags(answer);\n\n    //strip flags from question because they can be in different positions and cause string mismatch\n    question = this.stripFlags(question);\n    answer = this.stripFlags(answer);\n\n    \n\n    let flagsMatch = false;\n\n    if(flagsQ.length !== flagsA.length){\n        flagsMatch = false;\n    }else{\n            flagsMatch = flagsA.every(flag => {\n            return flagsQ.includes(flag);\n        });\n    }\n    \n\n    if(answer === question && flagsMatch )\n        return true;\n    else\n        return false;\n    \n\n\n},\n\n\nstripFlags(command){\n\n    command = command.split(\" \").filter(elem => {\n        return elem.charAt(0) !== \"-\"\n    });\n\n    //strip unnecessary spaces\n    \n    command = command.filter(elem => elem != \"\");\n    \n    command = command.join(\" \");\n\n    return command;\n\n},\n\n getFlags(command){\n\n    console.log('Getting flags for',command)\n    let flags = []\n    let tokens = command.split(\" \");\n    \n\n    let flagTokens = tokens.filter(token => {\n        return token.charAt(0) === \"-\";\n    })\n    \n\n    //remember to handle both unix -al and gnu style --help flags\n    flagTokens.forEach(token => {\n        if(token.indexOf(\"--\") > -1){\n            flags.push(token.substring(2));\n        }else{\n            let split = token.split(\"\");\n            split.forEach(flag => {\n                if(flag !== \"-\")\n                    flags.push(flag)\n            })\n        }\n    })\n    \n    return flags;\n\n}\n\n}\n\n\n\nconsole.log(module.exports.checkSame(\"cd ~\",\"cd g\"))","//simple SRS interval calculation function based on modified SuperMemo 2 algorithm below\n/*\nI(0) = 1 day\nI(1) = 4 days\nif n > 1 then I(n) = I(n-1) * 2 \n*/\n\nmodule.exports = {\n\n\n    update(question, correct){\n\n        if(correct){\n            return this.calcDue(question.repetitions,question.daysTillDue);\n        }else{\n            return this.calcFail(question.repetitions,question.daysTillDue);\n        }\n    },\n\n    //calculate the time for next SRS rep based on correct answer number of times answered correctly and past time\n    calcDue(repetitions, days){\n        let now = new Date();\n        let scheduled, futureDays;\n\n        //default if there is some error we still want to return something reasonable\n        scheduled = now.getTime();\n        futureDays = 0;\n\n        if(repetitions === 0){\n            scheduled =  now.getTime() + 86400000;\n            futureDays = 1; \n        }\n\n        if(repetitions === 1){\n            scheduled =  now.getTime() + 4 * 86400000;\n            futureDays = 4;\n        }\n\n        if(repetitions > 1){\n            futureDays =  days * 2.2;\n            scheduled = now.getTime() + futureDays * 86400000;\n\n        }\n        console.log(\"Answer correct, due to be repeated in\", (scheduled - now.getTime())/(1000*60*60*24) + \" days\")\n        \n        return { futureDays:futureDays, timeDue: scheduled }\n\n\n    },\n\n    //resets interval to 0 for newly failed items, may be more sophisticated in the future, thus the parameters\n    calcFail(repetitions,days){\n        let now = new Date();\n\n        let scheduled = now.getTime();\n        console.log(\"Answer incorrect, question due to be repeated in\", now.getTime() - scheduled + \" days\");\n\n        return { futureDays:0, timeDue: scheduled}\n\n    }\n\n\n}","Object.defineProperty(exports, '__esModule', { value: true });\n\nfunction attach(term, socket, bidirectional, buffered, callback) {\n  let command = \"\";\n\n  term._getCommand = function(){\n    return command;\n  }\n\n  bidirectional = (typeof bidirectional === 'undefined') ? true : bidirectional;\n  term.socket = socket;\n  term._flushBuffer = function () {\n    term.write(term._attachSocketBuffer);\n    term._attachSocketBuffer = null;\n  };\n  term._pushToBuffer = function (data) {\n    if (term._attachSocketBuffer) {\n      term._attachSocketBuffer += data;\n    } else {\n      term._attachSocketBuffer = data;\n      setTimeout(term._flushBuffer, 10);\n    }\n  };\n  let myTextDecoder;\n\n  term._getMessage = function (ev) {\n    let str;\n\n    if (typeof ev.data === 'object') {\n      if (ev.data instanceof ArrayBuffer) {\n        if (!myTextDecoder) {\n          myTextDecoder = new TextDecoder();\n        }\n        str = myTextDecoder.decode(ev.data);\n      } else {\n        throw new Error('TODO: handle Blob?');\n      }\n    }\n    if (buffered) {\n      term._pushToBuffer(str || ev.data);\n    } else {\n      //this is where to monkey with term writes\n      //in particular by checking for the echo pattern and somehow sending command to ReactXterm\n      //like maybe through a callback term.attach(socket, callback)\n      \n      // let tokens = ev.data.split(\" \");\n      // let comp = [];\n      // for(let i = 0; i < tokens.length; i++){\n      //   if(tokens[i].indexOf(\"echo\") > -1 ){\n      //     comp = tokens[i+1];\n      //   }\n      // }\n      // if(comp){\n      //   if(comp.indexOf(\"\\r\")> -1){\n      //     comp = comp.split(\"\\r\")[0];\n      //     console.log(\"Parsed commands to\",comp);\n      //     command = comp;\n      //   }\n      // }\n      \n      term.write(str || ev.data);\n    }\n  };\n  term._sendData = function (data) {\n    if (socket.readyState !== 1) {\n      return;\n    }\n    \n    let encoded = encodeURI(data);\n\n    if (encoded === '%1B%5B1;11D') return;\n    if (encoded === '%1B%5B1;11C') return;\n    socket.send(data);\n  };\n  socket.addEventListener('message', term._getMessage);\n  if (bidirectional) {\n    term.on('data', term._sendData);\n  }\n  socket.addEventListener('close', term.detach.bind(term, socket));\n  socket.addEventListener('error', term.detach.bind(term, socket));\n}\nexports.attach = attach;\n;\nfunction detach(term, socket) {\n  term.off('data', term._sendData);\n  socket = (typeof socket === 'undefined') ? term.socket : socket;\n  if (socket) {\n    socket.removeEventListener('message', term._getMessage);\n  }\n  delete term.socket;\n}\nexports.detach = detach;\n;\nfunction apply(terminalConstructor) {\n  terminalConstructor.prototype.attach = function (socket, bidirectional, buffered) {\n    return attach(this, socket, bidirectional, buffered);\n  };\n  terminalConstructor.prototype.detach = function (socket) {\n    return detach(this, socket);\n  };\n}\nexports.apply = apply;","var fs = require('fs');\nvar path = require('path');\nvar commandsJson = require('./cObj.json');\n\nvar commandsFile = './commands.txt'\n\n\nmodule.exports = {\n    \n    buffer: [],\n    cList: {},\n    score: 0,\n    commands: {},\n    \n    \n    init: function(){\n        \n        var cString;\n        var fileLocation = path.join(__dirname, commandsFile);\n        this.commands = commandsJson\n        console.log(\"Commands\",this.commands);\n        \n    },\n    \n    \n    addChar: function (char){\n        //add character to the buffer unless a control char\n       \n            this.buffer.push(char);\n        \n        \n    },\n    \n    printBuffer: function(){\n        console.log(this.buffer);\n    },\n    repeat: function(){\n        return this.buffer;\n    },\n\n    checkCommand: function(elem){\n        elem = elem.replace(/[\\n\\r\\t]/g,)\n        if(this.commands[elem]) return elem;\n        return false;\n    },\n    \n    clear: function(){\n        this.buffer = [];\n    },\n\n    check: function(textInput){\n\n        let tokens = textInput.split(\" \");\n        console.log(\"Got tokens of \",tokens,\" in check\");\n\n        //returns the first matching linux command in tokens array\n        for(let i =0; i < tokens.length; i++){\n            if (this.commands[tokens[i]]){\n                return tokens[i];\n            }\n        }\n\n        return false;\n\n    },\n    \n    checkBuffer: function(){\n        \n        if(this.buffer.indexOf(\"\\r\") >= 0){\n            // if we have an endline kind of tokenize buffer array eg ['l','s',' ','\\r']   ->   'ls \\r'   ->   ['ls',' ','\\r']\n            var tempBuffer = this.buffer.slice(0,this.buffer.length-1);\n            var ret = \"\"\n            var split = tempBuffer.join(\"\").split(\" \");\n            console.log(tempBuffer.join());\n            console.log(\"Got endline and tokenized to \" + split);\n            \n            split.forEach(elem => {\n                console.log(\"Running a check against clist for (command?)\",elem);\n                console.log(this.commands[elem]);\n                if(this.commands[elem]){\n                    console.log(\"Found valid command \"+ elem);\n                    this.buffer = [];\n                    this.score++;\n                    console.log(\"Score \"+ this.score);\n                    ret = elem;\n                }   \n            });\n            \n            this.buffer = [];\n            return ret;\n        }\n        \n    }\n    \n    \n};\n\n\n","import React from 'react';\n\nconst PORT = '3001';\nconst HOST = `127.0.0.1:${ PORT }`;\n\nconst style = {\n    border: '2px black solid',\n    background: 'pink',\n    width: '600px',\n    height:'450px',\n    position: 'absolute',\n    left: '100px',\n    top: '150px',\n    zIndex: '100'\n    }\n\nconst selectStyle = {\n    margin: '10px',\n    padding: '10px',\n    fontSize: '16px'\n}\n\nconst inputStyle = {\n    padding:\"5px\",\n    fontSize: '16px'\n}\n\n\nexport default class Popup extends React.Component {\n    constructor(props){\n        super(props)\n\n        this.state ={\n            command: this.props.data.typed,\n            display:\"\",\n            prompt:\"\",\n            level:0\n        }\n    }\n\n    componentWillMount(){\n        this.setState({display:this.props.data.typed.slice(-1)[0]});\n    }\n\n    onChange = field => e => {\n        this.setState({\n            [field]: e.target.value\n        });\n    }\n\n    handleKey = (event) => {\n        if(event.key === 'Enter'){\n            this.onSubmit();\n        }\n    }\n\n    onSubmit = () => {\n\n        let d = new Date();\n        let due = d.getTime();    //as of right now we want to schedule new questions immediately\n        //let due = d.getTime() + 86400000;  //adds exact number of ms in 1 day, wrong on DTS but ok\n        \n        console.log(\"Due is\",due)\n        const theBody = {\n            //this submits a command to a users database, not for custom making levels, rather for SRS mode\n            prompt:this.state.prompt,\n            answer:this.state.display,\n            answer2:\"\",\n            answered:false,\n            due:due,\n            daysTillDue:0,\n            repetitions:0\n        }\n\n        const theReq = `http://${ HOST }/api/srs`;\n\n        fetch(theReq, {\n            body: JSON.stringify(theBody), // data can be `string` or {object}!\n            headers:{\n            'Content-Type': 'application/json'\n            },\n            method:'POST'}).then( res => {\n            if(!res.ok) console.log(res.status);\n\n            res.text().then(resText => {\n                console.log(resText);\n                this.props.close();\n            });\n\n\n        })\n    }\n\n    renderOptions(){\n\n        return this.props.data.typed.map((typed, index) => {\n            return <option key={index} value={typed}>{typed}</option>\n        });\n    }\n\n    selectOption= (event) => {\n        \n        this.setState({display: event.target.value});\n    }\n\n    render(){\n\n        return (\n            <div style={style}>\n                <div >\n                    <h3>Add command to Database</h3>\n                    <div >\n                        <form onKeyPress={this.handleKey }>\n                            \n                            <label>Command </label><input style={inputStyle} onChange={this.onChange('command')} value ={this.state.display} type=\"text\"></input><br/>\n                            <label>Prompt </label><input style={inputStyle} onChange={this.onChange('prompt')} type=\"text\" size=\"200px\"></input><br/>\n                            <select style={selectStyle} onChange={this.selectOption}>\n                                {this.renderOptions()}\n                            </select>\n                        <div > \n                        <button style={{fontSize:\"16px\"}} type=\"button\" onClick={this.props.close}>Close </button>\n                        <button style={{fontSize:\"16px\"}} type=\"button\" onClick={this.onSubmit}>Submit</button>\n                        </div>\n                        </form>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n\n\n}","//@ts-check\nimport React from 'react';\nimport Popup from './Popup';\n\nconst style = {\n    border: 'black solid 2px',\n    borderRadius: '10px',\n    margin: '1px'\n}\n\nexport default class Command extends React.Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            renderPop:false\n        };\n\n        \n    }\n\n    onClose = () => {\n        this.setState({renderPop:false});\n    }\n\n    renderPop(){\n        \n        if(this.state.renderPop){\n            return <Popup close ={this.onClose} data={this.props.data} />\n        }\n    }\n    \n    handleClick = (element) => {\n        console.log(\"Clicked on me with data\",element, element.typed,this.props.data);\n        this.setState( {renderPop:true} );\n        //rendering a Popup when clicked that allows user to save to database\n    }\n\n    render(){\n        return (\n        <div>\n            <li style={style} onClick={this.handleClick} >{this.props.data.command}</li>\n            {this.renderPop()}\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport Command from './Command';\n\nconst style = {\n    float:'left',\n    position:'relative',\n    width:\"200px\",\n    height:\"800px\",\n    border:\"black solid 2px\"\n}\n\nconst PORT = '3001';\nconst HOST = `mv2-dev.us-east-1.elasticbeanstalk.com`;\n\nconst titleStyle ={\n    border:'2px solid black',\n    background: '#e7e4e4'\n}\n\nexport default class WordBox extends React.Component {\n    constructor(props){\n        super(props);\n\n        \n        this.index = 0;\n    }\n\n    handleClick = () =>{\n\n        this.props.setmode(\"srs\");\n        this.props.focus();\n\n        const theRequest = `http://${HOST}/api/srs`;\n\n        fetch(theRequest,{ method:'GET'}).then( response => {\n\n            response.text().then( resText => {\n                console.log(resText);\n                let resJSON = JSON.parse(resText)\n                this.props.questionsCall(resJSON);\n            })\n        })\n\n    }\n    renderButton(){\n        if(this.props.mode === \"srs\"){\n            return <p onClick={this.props.stopReview}>Stop Reviewing </p>\n        }else{\n            return <p onClick={this.handleClick}>Review Commands</p>\n        }\n    }\n    \n    renderWords(){\n\n        if(!this.props.words) return <p>loading</p>;\n\n        return this.props.words.map(elem => {\n            return <Command key={this.index++} data={elem}/>;\n        })\n    }\n\n    render(){\n        \n        return (\n            <div style={style}><div style={ titleStyle }>Commands</div>\n            <ul style={{width:\"80%\",margin:\"auto\", paddingInlineStart:\"0\"}}>\n            {this.renderWords()}\n            </ul >\n            <div style={{position:'absolute',bottom:'0', border:'2px solid black',background:'rgb(231, 228, 228)'}}>\n                <span>{this.props.completed.done}/{this.props.completed.total}</span>\n                {this.renderButton()}\n            </div>\n            </div>\n        );\n    }\n\n\n}","import React from 'react';\nimport { EventEmitter } from 'events';\n\nconst PORT = '3001';\n//const HOST = `127.0.0.1:${ PORT }`;\nconst HOST = \"mv2-dev.us-east-1.elasticbeanstalk.com\";\n\nconst style = {\n    float:'left',\n    width:\"200px\",\n    height:\"800px\",\n    border:\"black solid 2px\"\n}\n\nconst titleStyle ={\n    border:'2px solid black',\n    background: '#e7e4e4'\n}\n\nexport default class ControlBox extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.index = 0;\n    }\n\n    handleClick = (event) => {\n       \n        //when you click on Level x load in questions for that level\n        //if the user has completed previous levels\n        let levelClicked = event.target.value;\n\n        let nextLevel = 1;\n\n        this.props.levels.forEach(level => {\n            if(level.finished){\n                nextLevel = level.number + 1;\n            }\n        })\n\n        console.log(\"Nextlevel is\", nextLevel)\n        \n        if(levelClicked <= nextLevel){\n\n            const theReq = `http://${ HOST }/api/level/${levelClicked}`;\n\n            fetch(theReq, { method:'GET'}).then( res => {\n                if(!res.ok) console.log(res.status);\n\n                res.text().then(resText => {\n                    console.log(resText);\n                    let resjson = JSON.parse(resText);\n                    this.props.questionsCall(resjson);\n                });\n\n                this.props.focus();\n            })\n        }else{\n            this.props.locked();\n        }\n    }\n    renderStyle = (elem) => {\n\n        let style = { border: 'solid black 2px',\n                      borderRadius: '10px',\n                     };\n\n        if(elem.finished){\n            style.border = 'solid green 3px';\n            style.background = '#66ff66'\n    \n        }else if(elem.selected){\n            style.border = 'solid red 3px';\n            style.background = 'lightblue';\n        }\n\n        return style;\n    }\n\n\n    renderWords(){\n\n        if(!this.props.words) return <p>loading</p>;\n\n        return this.props.words.map((elem, index) => {\n\n            let completed = elem.selected ? <span style={{fontSize:12}}> {this.props.completed.done}/{this.props.completed.total}</span> : \"\";\n           \n            return <li value={index+1} style={this.renderStyle(elem)} onClick={this.handleClick} key={this.index++}>{elem.name}{completed}</li>;\n        })\n    }\n\n    render(){\n        return (\n            <div style={style}><div style={ titleStyle }>Levels</div>\n            <span>Score:{this.props.score}</span>\n            <ul style={{width:'80%',margin:'auto',paddingInlineStart:\"0\"}}>\n            {this.renderWords()}\n            </ul>\n            </div>\n        );\n    }\n\n\n}","import React from 'react';\n\nlet spanStyle = {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    lineHeight: 'normal',\n    color:'lightgoldenrodyellow',\n    fontFamily: 'courier-new, courier, monospace',\n    fontSize: '18px',\n    overflowWrap:'break-word',\n    overflow:'hidden'\n}\n\nlet innerStyle = {\n    height:\"70%\",\n    width:\"80%\",\n    margin:'auto',\n    paddingTop:\"10px\",\n    overflowWrap:'break-word',\n    overflow:\"hidden\"\n}\n\nexport default class Prompt extends React.Component {\n\n\n    render(){\n    \n        let style={\n                background:this.props.color,\n                border:'#666666 3px solid',\n                margin:'20px',\n                borderRadius:'40px',\n                height:\"80px\",\n                textAlign:'left',\n                whiteSpace: 'pre-wrap',\n                overflow:'hidden'\n\n            }\n        \n\n        return <div style={style}>\n                    <div style={innerStyle}>\n                        <span style={spanStyle}>{this.props.prompt}</span> \n                    </div>\n                </div>;\n    }\n\n\n}","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport WordBox from './WordBox';\nimport ControlBox from './ControlBox';\nimport Prompt from './Prompt';\nimport PropTypes from 'prop-types';\nimport { Terminal } from 'xterm';\nimport TimeDue from './timedue.js'\nimport CheckSame from './checkSame.js';\n// import * as attach from 'xterm/lib/addons/attach/attach';\nimport * as attach from './addons/attach';\nimport * as fit from 'xterm/lib/addons/fit/fit';\nimport * as fullscreen from 'xterm/lib/addons/fullscreen/fullscreen';\nimport * as search from 'xterm/lib/addons/search/search';\nimport * as winptyCompat from 'xterm/lib/addons/winptyCompat/winptyCompat';\n\nimport { runInThisContext } from 'vm';\nimport { puts } from 'util';\n\nvar parser = require('./parseCom')\nparser.init();\n\n//import getId from '../helpers/getId';\n\nTerminal.applyAddon(attach);\nTerminal.applyAddon(fit);\nTerminal.applyAddon(fullscreen);\nTerminal.applyAddon(search);\nTerminal.applyAddon(winptyCompat);\n\nconst PORT = '3001';\n//const HOST = `127.0.0.1:${ PORT }`;\nconst HOST = \"mv2-dev.us-east-1.elasticbeanstalk.com\"\nconst SOCKET_URL = `ws://${ HOST }/terminals/`;\n\nconst containerStyle ={\n  position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginRight: '-50%',\n    marginTop: '60px',\n    transform: 'translate(-50%, -50%)'\n}\n\n//todo refactor levels elsewhere to not clutter reactxterm\n//also poss to get dynamically from DB but seems just as well to hardcode levels for now\nconst levels = []\nconst MAX_LEVEL = 31\nconst MAX_DISPLAY = 23\nconst MAX = Math.min(MAX_DISPLAY, MAX_LEVEL)\n\nfor(let i = 0; i < MAX; i++){\n  levels.push({name:`Level ${i+1}`,number:i+1, finished:false, selected:false})\n}\n\n\nexport default class ReactTerminal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.buffer = [];\n\n    this.elementId = `terminal_1`;\n    this.failures = 0;\n    this.interval = null;\n    this.fontSize = 16;\n\n    this.state = {\n      lastEntry:\"\",\n      command: [],\n      prompt:\":\",\n      promptColor:'#202020',\n      questions: [],\n      levels:levels,\n      nextQuestion:0,\n      mode:'',\n      score:0\n    };\n  }\n\n  componentDidMount() {\n    this.term = new Terminal({\n      cursorBlink: true,\n      rows: 44,\n      fontSize: this.fontSize\n    });\n\n    this.term.open(document.getElementById('terminal-container'));\n    this.term.winptyCompatInit();\n    this.term.fit();\n    this.term.focus();\n    \n    // this.term.on('resize', ({ cols, rows }) => {\n    //   if (!this.pid) return;\n    //   fetch(`http://${ HOST }/terminals/${ this.pid }/size?cols=${ cols }&rows=${ rows }`, { method: 'POST' });\n    // });\n    this.term.on('key', (key) => {\n      \n      let command;\n      \n\n      if( key.charCodeAt(0) === 127){\n        //implement backspace textarea input deletion\n        let currentText = this.term.textarea.value;\n        \n        if(currentText.length > 0){\n          currentText = currentText.slice(0,-1);\n        }\n\n        this.term.textarea.value = currentText;\n        \n\n      }\n\n      if(key.charCodeAt(0) === 13){\n        \n        if(this.term.textarea.value === \"next\" && this.state.mode != \"\"){\n          \n          this.setState({nextQuestion:this.state.nextQuestion+1}, this.updatePrompt);\n        }\n\n        if(this.term.textarea.value === \"hint\" && this.state.mode!= \"\"){\n          let hint = this.state.questions[this.state.nextQuestion].answer;\n          \n          this.term.write(\"  \"+hint);\n          this.setState({score:this.state.score -1});\n          console.log(\"Hint state\", this.state.questions[this.state.nextQuestion].answer)\n        }\n\n        if(this.state.mode === 'levels' || this.state.mode === 'srs'){\n          //only check answer if there are questions loaded\n          this.checkAnswer(this.term.textarea.value);\n        }\n\n        command = parser.check(this.term.textarea.value);\n        console.log(\"!Checking textarea\",this.term.textarea.value)\n        console.log(\"Command returned as legit linux comand\",command);\n        \n\n        if(command){\n\n          this._makeCommand(command);\n          // console.log(\"Command true so update\",command)\n          // let commandObject = { \n          //                       command: command,\n          //                       typed: this.term.textarea.value       };\n\n          //  if(!this.state.command.includes(commandObject)){\n          //    this.setState( {command: [...this.state.command, commandObject] });\n          //  }\n        }\n\n        this.term.textarea.value =\"\";\n\n        //this.term.writeln(\"echo !!\");\n        // setTimeout(() => this.term._sendData(\"echo !!\\r\", 100));\n        // setTimeout(() => {\n        //   comm = this.term._getCommand();\n        //   console.log(\"Command in ReactXterm of \", comm);\n        //   command  = parser.checkCommand(comm);\n          \n        //   console.log('Checkcommand returned', command);\n\n        //   if(command){\n            \n        //     let commandObject = { command: command,\n        //     typed: parser.repeat().join(\"\") };\n\n        //     console.log(\"Command obj putitng into state\", commandObject);\n            \n        //     if(!this.state.command.includes(commandObject)){\n             \n        //       this.setState( { command: [...this.state.command, commandObject] } );\n        //     }\n            \n        //   }\n        //   parser.clear();\n        // }, 500);\n        \n        \n      }\n      \n      //console.log(\"Command after checkBuffer\",command);\n     \n    });\n\n    this.term.decreaseFontSize = () => {\n      this.term.setOption('fontSize', --this.fontSize);\n      this.term.fit();\n    };\n    this.term.increaseFontSize = () => {\n      this.term.setOption('fontSize', ++this.fontSize);\n      this.term.fit();\n    };\n    this._connectToServer();\n\n    // listenToWindowResize(() => {\n    //   this.term.fit();\n    // });\n    this.term.fit();\n\n    // this.term._core.register(this.term.addDisposableListener('key', (key, ev) => {\n    //   const printable = !ev.altKey && !ev.altGraphKey && !ev.ctrlKey && !ev.metaKey;\n  \n    //   if (ev.keyCode === 13) {\n    //     this.term.prompt();\n    //   } else if (ev.keyCode === 8) {\n    //    // Do not delete the prompt\n    //     if (this.term.x > 2) {\n    //       this.term.write('\\b \\b');\n    //     }\n    //   } else if (printable) {\n    //     this.term.write(key);\n    //   }\n    // }));\n  \n    // this.term._core.register(this.term.addDisposableListener('paste', (data, ev) => {\n    //   this.term.write(data);\n    // }));\n    // this.term.on('key',function(key){\n    //   console.log(\"Term got a key event\");\n    //   this.term.write(key);\n    // })\n\n    // this.term.textarea.onkeydown = e => {\n    //   console.log(e.keyCode, e.shiftKey, e.ctrlKey, e.altKey);\n    //   // ctrl + shift + metakey + +\n    //   if ((e.keyCode === 187 || e.keyCode === 61) && e.shiftKey && e.ctrlKey && e.altKey) {\n    //     this.term.setOption('fontSize', ++this.fontSize);\n    //     this.term.fit();\n    //   }\n    //   // ctrl + shift + metakey + -\n    //   if ((e.keyCode === 189 || e.keyCode === 173) && e.shiftKey && e.ctrlKey && e.altKey) {\n    //     this.term.setOption('fontSize', --this.fontSize);\n    //     this.term.fit();\n    //   }\n    //   // ctrl + shift + metakey + v\n    //   if (e.keyCode === 86 && e.shiftKey && e.ctrlKey && e.altKey) {\n    //     this.props.options.splitVertical && this.props.options.splitVertical();\n    //   }\n    //   // ctrl + shift + metakey + h\n    //   if (e.keyCode === 72 && e.shiftKey && e.ctrlKey && e.altKey) {\n    //     this.props.options.splitHorizontal && this.props.options.splitHorizontal();\n    //   }\n    //   // ctrl + shift + metakey + w\n    //   if (e.keyCode === 87 && e.shiftKey && e.ctrlKey && e.altKey) {\n    //     this.props.options.close && this.props.options.close();\n    //   }\n    // };\n  }\n  componentWillUnmount() {\n    clearTimeout(this.interval);\n  }\n\n  flashPrompt(correct){\n    if(correct){\n      this.setState({promptColor:'green'});\n    }\n    else{\n      this.setState({promptColor:'red'});\n    }\n\n    setTimeout(() => { this.setState({promptColor:'#202020'} ) }, 250);\n  }\n\n  handleQuestions = (questionsArray) => {\n    //this will be called from controlbox which does a db query to get questions\n    //and load in a level\n    let levelSelected;\n    if(questionsArray){\n      levelSelected = questionsArray[0].level;\n    }\n    \n    let levels = this.state.levels.map(elem => {\n      if (elem.number == levelSelected)\n          elem.selected = true;\n      else\n          elem.selected = false;\n      return elem;\n    });\n    if(questionsArray.length > 0){\n      this.setState({levels:levels});\n\n      this.setState({nextQuestion: 0});\n      this.setState({questions:questionsArray, mode:\"levels\"}, this.updatePrompt);\n    }\n    \n  }\n\n  handleSRS = (questionsArray) => {\n\n    if(questionsArray.length == 0){\n      console.log(\"No questions due found\")\n      this.setState({prompt:\"No questions due for review\"},() => {setTimeout(() => this.setState({prompt:\"prompt\"}), 2000)})\n      \n    }else{\n      this.setState({questions:questionsArray}, () => {this.updatePrompt(); this.setMode(\"srs\")});\n    }\n\n\n  }\n\n  updatePrompt(){\n    //sets the top prompt to be whatever the next question in this.state.questions is\n    let questions = this.state.questions;\n    \n    if(this.state.questions.length == 0){\n      return;\n    }\n    //console.log(\"Next question\",this.state.nextQuestion,\" and \",questions.length)\n\n    if(this.state.nextQuestion >= questions.length && questions.length > 0){\n      this.setState({prompt:\"Level Complete!\",questions:[],nextQuestion:0, mode:''});\n\n      let currentLevel = this.state.questions[0].level;\n      let levels = this.state.levels.map(elem =>{\n        if(elem.number == currentLevel)\n          elem.finished = true;\n\n        return elem;\n      });\n      this.setState({levels:levels});\n      \n    }else{\n\n      this.setState({prompt:questions[this.state.nextQuestion].prompt});\n    }\n\n  }\n\n  checkAnswer(answer){\n\n    if(this.state.mode !== 'levels' && this.state.mode !== 'srs') return;\n   \n    console.log(\"Console logging textarea\", this.term.textarea.value);\n    //answer = answer.replace(pattern,\" \");\n    console.log(\"checking answer\", answer, \" id question\",this.state.questions[this.state.nextQuestion].answer)\n    let questions = this.state.questions;\n    let correct = false;\n\n    let correct1 = questions[this.state.nextQuestion].answer;\n    let correct2 = questions[this.state.nextQuestion].answer2;\n\n    if(CheckSame.checkSame(correct1,answer) || CheckSame.checkSame(correct2,answer)){\n\n      correct = true;\n      questions[this.state.nextQuestion].answered = true;\n      \n      if(this.state.mode === 'srs'){\n        this.updateDue(questions[this.state.nextQuestion], correct)\n      }\n\n      this.setState({questions:questions, nextQuestion: this.state.nextQuestion + 1, score:this.state.score + 5}, this.updatePrompt);\n    }else{\n      if(this.state.mode === 'levels'){\n        this.setState({score:this.state.score -1});\n      }\n\n      if(this.state.mode === 'srs'){\n        \n        this.updateDue(questions[this.state.nextQuestion], correct)\n      }\n    }\n    \n    this.flashPrompt(correct);\n\n  }\n\n  updateDue(question, correct){\n\n    console.log(\"Question we are about to update\",question)\n    \n    let dueObj = TimeDue.update(question,correct);\n    let repetitions = correct ? question.repetitions + 1 : 0;\n\n    console.log(dueObj)\n\n    let theBody = {\n      id:question.id,\n      due:dueObj.timeDue,\n      daysTillDue:dueObj.futureDays,\n      repetitions: repetitions\n    }\n\n\n    //fetch(`http://${HOST}/api/srs`, {method:'PUT', body:theBody});\n    let theReq = `http://${HOST}/api/srs`;\n\n    fetch(theReq, {\n      body: JSON.stringify(theBody), // data can be `string` or {object}!\n      headers:{\n      'Content-Type': 'application/json'\n      },\n      method:'PUT'}).then( res => {\n      if(!res.ok) console.log(res.status);\n\n      res.text().then(resText => {\n          console.log(resText);\n          \n      });\n\n    })\n\n  }\n\n  focusTerm =() => {\n    this.term.focus();\n  }\n\n  locked = () => {\n\n    let oldPrompt = this.state.prompt;\n    console.log(\"About to reset the prompt herenow\")\n\n    this.setState({prompt:\"Locked\"}, () => { setTimeout(() => this.setState({prompt:oldPrompt}), 500)})\n  }\n\n  stop = () => {\n    console.log(\"Stopping reviewing\")\n    //to quit a level or srs reviewing\n    this.setState({mode:\"\",questions:\"\",nextQuestion:0,prompt:\":\"})\n  }\n\n  setMode = (mode) => {\n    if(this.state.mode === mode){\n      console.log(\"Attempting to set state to\",mode, \" it is already in\");\n    }\n    if(this.state.questions.length === 0){\n      console.log(\"Attempting to review 0 questions\");\n      return;\n    }\n\n    this.setState({mode:mode});\n  }\n\n  completed(){\n    return {done: this.state.nextQuestion, total:this.state.questions.length }\n  }\n \n  render() {\n\n    return (\n      <div style={containerStyle}>\n        <Prompt color={this.state.promptColor} prompt={this.state.prompt}/>\n\n        <WordBox \n         stopReview={this.stop}\n         mode={this.state.mode} \n         completed={this.completed()} \n         focus={this.focusTerm} \n         setmode={this.setMode} \n         questionsCall={this.handleSRS} \n         lastEntry={this.state.lastEntry} \n         words={this.state.command}/>\n\n        <div id={\"terminal-container\"}  style={{\n        float:'left', top: 0, left: 0, width: '80', height: '100%'\n        }}></div>\n\n        <ControlBox \n         completed={this.completed()}\n         score={this.state.score} \n         locked={this.locked} \n         levels={this.state.levels} \n         setmode={this.setMode} \n         focus={this.focusTerm} \n         questionsCall={this.handleQuestions} \n         words={this.state.levels}/>\n\n         <p>BETA: 'hint' for a hint or 'next' to skip question</p>\n    </div>\n    )\n  }\n\n\n\n  _connectToServer() {\n\n    const theReq = `http://${ HOST }/terminals/?cols=${ this.term.cols }&rows=${ this.term.rows }`;\n\n    fetch(\n      theReq,\n      { method: 'POST' }\n    ).then(\n      res => {\n        if (!res.ok) {\n          this.failures += 1;\n          if (this.failures === 2) {\n            this.term.writeln(\n              'There is back-end server found but it returns \"' +\n              res.status + ' ' + res.statusText + '\".'\n            );\n          }\n          this._tryAgain();\n          return;\n        }\n        res.text().then(processId => {\n          this.pid = processId;\n          this.socket = new WebSocket(SOCKET_URL + processId);\n          console.log(\"The socket at\",SOCKET_URL+processId);\n          console.log(\"Socket\",this.socket);\n          \n          this.socket.onopen = () => {\n            this.term.attach(this.socket, true , false, (comp) => { console.log(\"Callback\" ,comp)} );\n            this.term.writeln(\"Welcome to the beginning of mastershell\");\n          };\n          this.socket.onclose = () => {\n            this.term.writeln('Server disconnected!');\n            this.term.writeln('Auto reconnect disabled, refresh page to restart')\n            //setInterval(() => this._connectToServer(), 2500);\n          };\n          this.socket.onerror = () => {\n            this.term.writeln('Socket error, disconnected!');\n            this.term.writeln('Auto reconnect disabled, refresh page to restart')\n            //setInterval(() => this._connectToServer(), 2500);\n          };\n        });\n      },\n      error => {\n        this.failures += 1;\n        if (this.failures === 2) {\n          this.term.writeln('It looks like there is no backend. You have to:');\n          this.term.writeln('> npm install evala -g');\n          this.term.writeln('> evala --shell=$SHELL');\n        }\n        console.error(error);\n        this._tryAgain();\n      }\n    );\n  }\n  \n  _tryAgain() {\n    clearTimeout(this.interval);\n    this.interval = setTimeout(() => {\n      this._connectToServer();\n    }, 2000);\n  }\n\n_makeCommand(command){\n  //if command is new command make a new entry for that, otherwise update its typed array to hold its exact\n  //input ie ls, ls-al, ls /temp etc etc...\n  console.log(\"Command true so update\",command);\n\n  let typed = this.term.textarea.value;\n\n  //check if entire command input is a repeat, ie already seen exact entry ls -al\n  let repeat = this.state.command.some( commandObj =>  commandObj.typed === typed );\n\n  if(!repeat){\n      let seenCommand = this.state.command.some(commandObj => commandObj.command === command);\n\n      if(!seenCommand){\n          let commandObject = { \n            command: command,\n            typed: [this.term.textarea.value]     };\n\n            this.setState( {command: [...this.state.command, commandObject] });\n      }\n      else {\n        let updateCommands = this.state.command;\n\n        updateCommands.forEach(commandObj => {\n          if(commandObj.command === command){\n            commandObj.typed.push(typed);\n          }\n        });\n\n        // let update = this.state.command.find(commandObj => commandObj.command === command );\n        // update.typed.push(typed);\n        this.setState( {command: [...updateCommands] });\n      }\n  }\n\n}\n};\n\nReactTerminal.propTypes = {\n  options: PropTypes.object\n};\n\nfunction listenToWindowResize(callback) {\n  var resizeTimeout;\n\n  function resizeThrottler() {\n    // ignore resize events as long as an actualResizeHandler execution is in the queue\n    if (!resizeTimeout) {\n      resizeTimeout = setTimeout(function () {\n        resizeTimeout = null;\n        callback();\n      }, 66);\n    }\n  }\n\n  window.addEventListener('resize', resizeThrottler, false);\n}\n","import React, { Component } from 'react';\nimport ReactTerminal from './ReactXterm';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <ReactTerminal />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}